th:text="${variavel}" -> puxar um texto do back end
th:each="pedido: ${pedidos}" -> percorrer uma lista
th:value -> valor de um input
th:src -> valor de uma iimagem
th:object="${classe}" -> puxar com base no objeto do form 
th:field="*{campo}" -> pegar campo para o DTO
th:error="*{campo}" -> mostra mensagem se tiver erro
th:erroclass="nomeclasse" -> acrescenta classe se tiver erro

th:fragment="nome" -> criar um template ="nome(paramentro)"
th:replace="~{nomeArquivo :: nomeFragmento} ou "~{nomeArquivo :: nomeFragmento(paramentro)}

<th:block></th:block> -> tag exclusiva do thymelaef (colocar estruturas de decisão dentro)

th:switch="${condicao}" -> para colocar a condição
th:case="'VALOR'" -> colocar as entradas se caso
th:classappend ="${status} == 'valor' ? 'classeQueEuAdd'" adicionar classe com base numa condição
th:if= condição


redirect:/ -> direcionar para o endereço que voce desejar


*Ver utilitarios DOCS para formatar as coisas*

${#temporals.format(pedido.dtEntrega, 'dd/MM/yyyy')} -> formatar datas (VER MAIS EM DOCS UTILITARIOS)

sec:authorize = verificação de segurança(serve para logado ou roles)
Necessario colocar essa dependencia
<dependency>
			<groupId>org.thymeleaf.extras</groupId>
			<artifactId>thymeleaf-extras-springsecurity5</artifactId>
</dependency>

Classe Principal serve para pegar dados de usuarios logados